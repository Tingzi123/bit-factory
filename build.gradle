plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.16.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation("io.jsonwebtoken:jjwt:0.9.1")
    implementation 'org.testcontainers:jdbc:1.16.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'

    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    testCompileOnly 'org.projectlombok:lombok:1.18.6'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.6'
    implementation platform('org.testcontainers:testcontainers-bom:1.16.3') //import bom
    testImplementation('org.testcontainers:mysql') //no version specified
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
    testImplementation "org.testcontainers:junit-jupiter:1.16.3"

    compileOnly group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compileOnly 'org.redisson:redisson:3.16.8'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    useJUnitPlatform()
}

task dockerStart(type: Exec) {
    workingDir "$projectDir"
    commandLine 'docker-compose', 'up'
}

task localStart(type: Exec) {
    dependsOn 'dockerStart'
    workingDir "$projectDir"
//    commandLine 'sh', './local.sh'
    commandLine './gradlew', 'bootRun'
}
